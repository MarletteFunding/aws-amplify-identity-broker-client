{
    "awstemplateformatversion": "2010-09-09",
    "description": "hosting resource stack creation using amplify cli",
    "parameters": {
        "env": {
            "type": "string"
        },
        "bucketname": {
            "type": "string"
        }
    },
    "conditions": {
        "shouldnotcreateenvresources": {
            "fn::equals": [
                {
                    "ref": "env"
                },
                "none"
            ]
        }
    },
    "resources": {
        "s3bucket": {
            "type": "aws::s3::bucket",
            "deletionpolicy": "retain",
            "properties": {
                "bucketencryption": {
                    "serversideencryptionconfiguration": [
                        {
                            "serversideencryptionbydefault": {
                                "ssealgorithm": "aws:kms",
                                "kmsmasterkeyid": "kms-key-arn"
                            }
                        }
                    ]
                },
                "VersioningConfiguration" : {
                    "Status" : "Enabled"
                },
                "bucketname": {
                    "fn::if": [
                        "shouldnotcreateenvresources",
                        {
                            "ref": "bucketname"
                        },
                        {
                            "fn::join": [
                                "",
                                [
                                    {
                                        "ref": "bucketname"
                                    },
                                    "-",
                                    {
                                        "ref": "env"
                                    }
                                ]
                            ]
                        }
                    ]
                },
                "websiteconfiguration": {
                    "indexdocument": "index.html",
                    "errordocument": "index.html"
                },
                "corsconfiguration": {
                    "corsrules": [
                        {
                            "allowedheaders": [
                                "authorization",
                                "content-length"
                            ],
                            "allowedmethods": [
                                "get"
                            ],
                            "allowedorigins": [
                                "*"
                            ],
                            "maxage": 3000
                        }
                    ]
                }
            }
        },
        "privatebucketpolicy": {
            "type": "aws::s3::bucketpolicy",
            "dependson": "originaccessidentity",
            "properties": {
                "policydocument": {
                    "id": "mypolicy",
                    "version": "2012-10-17",
                    "statement": [
                        {
                            "sid": "apireadforgetbucketobjects",
                            "effect": "allow",
                            "principal": {
                                "canonicaluser": {
                                    "fn::getatt": [
                                        "originaccessidentity",
                                        "s3canonicaluserid"
                                    ]
                                }
                            },
                            "action": "s3:getobject",
                            "resource": {
                                "fn::join": [
                                    "",
                                    [
                                        "arn:aws:s3:::",
                                        {
                                            "ref": "s3bucket"
                                        },
                                        "/*"
                                    ]
                                ]
                            }
                        }
                    ]
                },
                "bucket": {
                    "ref": "s3bucket"
                }
            }
        },
        "originaccessidentity": {
            "type": "aws::cloudfront::cloudfrontoriginaccessidentity",
            "properties": {
                "cloudfrontoriginaccessidentityconfig": {
                    "comment": "cloudfrontoriginaccessidentityconfig"
                }
            }
        },
        "cloudfrontdistribution": {
            "type": "aws::cloudfront::distribution",
            "dependson": [
                "s3bucket",
                "originaccessidentity"
            ],
            "properties": {
                "distributionconfig": {
                    "origins": [
                        {
                            "domainname": {
                                "fn::getatt": [
                                    "s3bucket",
                                    "domainname"
                                ]
                            },
                            "id": "hostings3bucket",
                            "s3originconfig": {
                                "originaccessidentity": {
                                    "fn::join": [
                                        "",
                                        [
                                            "origin-access-identity/cloudfront/",
                                            {
                                                "ref": "originaccessidentity"
                                            }
                                        ]
                                    ]
                                }
                            }
                        }
                    ],
                    "enabled": "true",
                    "defaultcachebehavior": {
                        "allowedmethods": [
                            "delete",
                            "get",
                            "head",
                            "options",
                            "patch",
                            "post",
                            "put"
                        ],
                        "targetoriginid": "hostings3bucket",
                        "forwardedvalues": {
                            "querystring": "false"
                        },
                        "viewerprotocolpolicy": "redirect-to-https",
                        "defaultttl": 86400,
                        "maxttl": 31536000,
                        "minttl": 60,
                        "compress": true
                    },
                    "defaultrootobject": "index.html",
                    "customerrorresponses": [
                        {
                            "errorcachingminttl": 300,
                            "errorcode": 400,
                            "responsecode": 200,
                            "responsepagepath": "/"
                        },
                        {
                            "errorcachingminttl": 300,
                            "errorcode": 403,
                            "responsecode": 200,
                            "responsepagepath": "/"
                        },
                        {
                            "errorcachingminttl": 300,
                            "errorcode": 404,
                            "responsecode": 200,
                            "responsepagepath": "/"
                        }
                    ]
                }
            }
        }
    },
    "outputs": {
        "region": {
            "value": {
                "ref": "aws::region"
            }
        },
        "hostingbucketname": {
            "description": "hosting bucket name",
            "value": {
                "ref": "s3bucket"
            }
        },
        "websiteurl": {
            "value": {
                "fn::getatt": [
                    "s3bucket",
                    "websiteurl"
                ]
            },
            "description": "url for website hosted on s3"
        },
        "s3bucketsecureurl": {
            "value": {
                "fn::join": [
                    "",
                    [
                        "https://",
                        {
                            "fn::getatt": [
                                "s3bucket",
                                "domainname"
                            ]
                        }
                    ]
                ]
            },
            "description": "name of s3 bucket to hold website content"
        },
        "cloudfrontdistributionid": {
            "value": {
                "ref": "cloudfrontdistribution"
            }
        },
        "cloudfrontdomainname": {
            "value": {
                "fn::getatt": [
                    "cloudfrontdistribution",
                    "domainname"
                ]
            }
        },
        "cloudfrontsecureurl": {
            "value": {
                "fn::join": [
                    "",
                    [
                        "https://",
                        {
                            "fn::getatt": [
                                "cloudfrontdistribution",
                                "domainname"
                            ]
                        }
                    ]
                ]
            }
        },
        "cloudfrontoriginaccessidentity": {
            "value": {
                "ref": "originaccessidentity"
            }
        }
    }
}